import socket, sys

class Server():
    def __init__(self, host, port, max_conn):
        self.host = host
        self.port = port
        self.counter = 0
        self.max_conn = max_conn
        self.mySocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.mySocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        
        try:
            self.mySocket.bind((host, port))
        except socket.error:
            print("The socket's liaison to the choosen adress failed")
            sys.exit
            
    def connexion_of_client(self):
        while 1:
            print("Wainting the player connexion")
            self.mySocket.listen(5)

            connexion1, adress1 = self.mySocket.accept()
            self.counter += 1

            print(f"Client connected with IP {adress1[0]}, port {adress1[1]}")

            msgServer = "6"
            connexion1.send(msgServer.encode("Utf8"))
            
            connexion2, adress2 = self.mySocket.accept()
            self.counter += 1

            print(f"Client connected with IP {adress2[0]}, port {adress2[1]}")


            colorChoice = 1 if "1" == connexion1.recv(1024).decode("Utf8") else 0

            self.player = {}
            
            if colorChoice:
                self.player[True] = connexion1
                self.player[False] = connexion2
            else:
                self.player[True] = connexion2
                self.player[False] = connexion1

            connexion1.send(str(colorChoice).encode("Utf8"))
            connexion2.send(str(1 - colorChoice).encode("Utf8"))

            return
    
    def ask_movement(self, color):
        
        self.player[color].send('Go'.encode("Utf8"))

        coordonate = self.player[color].recv(1024).decode("Utf8")

        y, x = coordonate[0], coordonate[2]

        return y, x

    def send_coordonate(self, color, l):

        self.player[color].send(str(l).encode("Utf8"))

        return

    
